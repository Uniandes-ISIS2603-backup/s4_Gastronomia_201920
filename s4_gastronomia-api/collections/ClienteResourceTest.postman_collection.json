{
	"info": {
		"_postman_id": "1d13e377-2b45-4a9c-92bb-f8692961eeba",
		"name": "ClienteResourceTest",
		"description": "Cliente Resource Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "780e987f-8dca-4fa7-8e4f-13c4da4bf491",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Carolina\",\n\t\"apellido\": \"Castillo\",\n\t\"username\": \"c.castillo\",\n\t\"email\": \"c.castillo@gmail.com\",\n\t\"contrasena\": \"password\",\n\t\"cumpleanos\": \"1998-09-14T05:00:00Z[UTC]\",\n\t\"numeroContacto\": \"+57 3218959151\",\n\t\"puntos\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un cliente 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "780e987f-8dca-4fa7-8e4f-13c4da4bf491",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\", data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Natalia\",\n\t\"apellido\": \"Padilla\",\n\t\"username\": \"n.padilla\",\n\t\"email\": \"n.padilla@gmail.com\",\n\t\"contrasena\": \"password\",\n\t\"cumpleanos\": \"1998-10-09T05:00:00Z[UTC]\",\n\t\"numeroContacto\": \"+57 3218959106\",\n\t\"puntos\": 0\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los clientes",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "90f5b021-e817-4bb5-8fbb-32970b53e920",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Gell All\"] = responseCode.code === 200;",
							"tests[\"Número de clientes\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "20acc8ea-cadf-4ea4-b92e-f4d8218ce963",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"{{new_id_a}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un autor de la aplicación.  \r\nLa petición no tiene cuerpo.\r\nSe envía el id del autor deseado por la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Obtener un cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "39dc353d-ae0a-41c6-99a5-89218360c4d3",
						"exec": [
							"tests[\"No se deberia obtener un cliente con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un autor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Editar un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68dc8b6c-6d16-40b8-8f51-b61db7113074",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Carolina\",\n\t\"apellido\": \"Castillo\",\n\t\"username\": \"c.castillo\",\n\t\"email\": \"c.castillo@gmail.com\",\n\t\"contrasena\": \"password\",\n\t\"cumpleaños\": \"1998-09-14T05:00:00Z[UTC]\",\n\t\"numeroContacto\": \"+57 3218959151\",\n\t\"puntos\": 100\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"{{new_id_a}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza un autor existente. \r\nse envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Editar un autor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "15a70f62-2a66-469a-9ca6-d1125b0c8774",
						"exec": [
							"tests[\"No se deberia actualizar un cliente con id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"nombre\": \"Carolina\",\n\t\"apellido\": \"Castillo\",\n\t\"username\": \"c.castillo\",\n\t\"email\": \"c.castillo@gmail.com\",\n\t\"contrasena\": \"password\",\n\t\"cumpleaños\": \"1998-09-14T05:00:00Z[UTC]\",\n\t\"numeroContacto\": \"+57 3218959151\",\n\t\"puntos\": 100\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\nActualiza un autor que no existe. \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código HTTP esperado: 404**"
			},
			"response": []
		},
		{
			"name": "Borrar un cliente",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d403e21b-3da3-4bbc-9b8a-9a2285ec0292",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"{{new_id_a}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un cliente 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "7db5b212-04c0-43a8-b627-44b62f4b9852",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"{{new_id_a2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar un cliente que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c0905623-e468-4838-b24e-56e8402ea65c",
						"exec": [
							"tests[\"No se deberia borrar un cliente con un id que no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /clientes/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s4_gastronomia-api/api/clientes/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s4_gastronomia-api",
						"api",
						"clientes",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra un autor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}